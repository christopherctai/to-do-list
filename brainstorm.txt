Requirements:  
-have to-do items with title, description, dueDate, priority 
-projects or separate lists of todos 
-a default project where all the initial todos go
-users should be able to create new projects and choose which projects the todos go into 
-user interface: 
--view all projects 
--view all todos in each project (just title and duedate and color for priorities) 
--expand a todo to see/edit details 
--delete a todo 

Important notes: 
-separate your application logic (ie, creating new todos, setting them as complete, changing priority, etc.) from your DOM-related stuff that gets DOM stuff and changes it 

Last Finishes: 
-fix bugs: my project default creation
-decide on calendar and date stuff? 
-keep in local storage 
-projects cannot have the same name OR be blank 
-requirements for adding a note

Modules: 


INFORMATION HOLDERS 
Note 
-information holder object 
-contains title, description, dueDate, priority
-has an ID 
-has functions to change its title, description, dueDate, and priority 

Project
-information holder object 
-contains an array of Notes 

projectInformation 
-information holder object 
-contains an array of projects 

STRUCTURER 
noteProjectStructurer 
-when a user adds a note, it goes into a particular project 

CONTROLLERS
projectController
-can create a new empty project 
-can delete a project 
-can add a note to a project 
-can delete a note from a project 

DISPLAYERS


projectDisplayer (DOM)
-displays a project 
-relies on noteDisplayer

noteDisplayer (DOM)
-displays a note 

displayController (DOM)
-displays the to-do-list 

UTILS 

makeEditable
-makes text editable 

makeUneditable
-makes text uneditable 


TODO: 
-make a form 
-link the form to the projects array (remember that you need to add to a particular project!)
-allow content to be edited 
-when content is edited it needs to update the project array! 


-could use a change event listener for the last one 


